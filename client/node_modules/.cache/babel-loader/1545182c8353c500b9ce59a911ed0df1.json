{"ast":null,"code":"import gql from 'graphql-tag';\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_REACTION = gql`\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const REMOVE_FRIEND = gql`\n  mutation removeFriend($id: ID!) {\n    removeFriend(id: $id) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["C:/Users/mlind/OneDrive/Desktop/UT Austin Coding Bootcamp/03_Class Work/Module Work/food-for-thought/client/src/utils/mutations.js"],"names":["gql","LOGIN_USER","ADD_USER","ADD_THOUGHT","ADD_REACTION","ADD_FRIEND","REMOVE_FRIEND"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,UAAU,GAAGD,GAAI;;;;;;;;;;CAAvB;AAYP,OAAO,MAAME,QAAQ,GAAGF,GAAI;;;;;;;;;;CAArB;AAYP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;;;;;;;CAAxB;AAeP,OAAO,MAAMI,YAAY,GAAGJ,GAAI;;;;;;;;;;;;;CAAzB;AAeP,OAAO,MAAMK,UAAU,GAAGL,GAAI;;;;;;;;;;;;CAAvB;AAcP,OAAO,MAAMM,aAAa,GAAGN,GAAI;;;;;;;;;;;CAA1B","sourcesContent":["import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_REACTION = gql`\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_FRIEND = gql`\n  mutation removeFriend($id: ID!) {\n    removeFriend(id: $id) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}