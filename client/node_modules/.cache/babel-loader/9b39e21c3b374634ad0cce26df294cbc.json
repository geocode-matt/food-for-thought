{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mlind\\\\OneDrive\\\\Desktop\\\\UT Austin Coding Bootcamp\\\\03_Class Work\\\\Module Work\\\\food-for-thought\\\\client\\\\src\\\\components\\\\ReactionForm\\\\index.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({\n  thoughtId\n}) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, {\n    error\n  }] = useMutation(ADD_REACTION); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: {\n          reactionBody,\n          thoughtId\n        }\n      }); // clear form value\n\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `m-0 ${characterCount === 280 || error ? 'text-error' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, \"Something went wrong...\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex-row justify-center justify-space-between-md align-stretch\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Leave a reaction to this thought...\",\n    value: reactionBody,\n    className: \"form-input col-12 col-md-9\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn col-12 col-md-3\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Submit\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Something went wrong...\"));\n};\n\nexport default ReactionForm;","map":{"version":3,"sources":["C:/Users/mlind/OneDrive/Desktop/UT Austin Coding Bootcamp/03_Class Work/Module Work/food-for-thought/client/src/components/ReactionForm/index.js"],"names":["React","useState","useMutation","ADD_REACTION","ReactionForm","thoughtId","reactionBody","setBody","characterCount","setCharacterCount","addReaction","error","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables","e","console"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACtC,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACS,WAAD,EAAc;AAAEC,IAAAA;AAAF,GAAd,IAA2BT,WAAW,CAACC,YAAD,CAA5C,CAHsC,CAKtC;;AACA,QAAMS,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,GAAjC,EAAsC;AACpCT,MAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAN,MAAAA,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAjB;AACD;AACF,GALD,CANsC,CAatC;;;AACA,QAAMC,gBAAgB,GAAG,MAAMJ,KAAN,IAAe;AACtCA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAI;AACF,YAAMR,WAAW,CAAC;AAChBS,QAAAA,SAAS,EAAE;AAAEb,UAAAA,YAAF;AAAgBD,UAAAA;AAAhB;AADK,OAAD,CAAjB,CADE,CAKF;;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACD,KARD,CAQE,OAAOW,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACV,KAAR,CAAcS,CAAd;AACD;AACF,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,OAAMZ,cAAc,KAAK,GAAnB,IAA0BG,KAA1B,GAAkC,YAAlC,GAAiD,EAAG,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBH,cADpB,UAEGG,KAAK,iBAAI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFZ,CADF,eAKE;AACE,IAAA,SAAS,EAAC,gEADZ;AAEE,IAAA,QAAQ,EAAEM,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,WAAW,EAAC,qCADd;AAEE,IAAA,KAAK,EAAEX,YAFT;AAGE,IAAA,SAAS,EAAC,4BAHZ;AAIE,IAAA,QAAQ,EAAEM,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAWE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CALF,EAqBGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BArBZ,CADF;AAyBD,CAvDD;;AAyDA,eAAeP,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({ thoughtId }) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\n\n  // update state based on form input changes\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: { reactionBody, thoughtId }\n      });\n\n      // clear form value\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a reaction to this thought...\"\n          value={reactionBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default ReactionForm;\n"]},"metadata":{},"sourceType":"module"}